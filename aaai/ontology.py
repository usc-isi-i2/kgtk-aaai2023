import math
import pandas as pd
from .util import en, CLASS_NODE_COLUMNS, PROPERTY_COLUMNS

_QNODES = pd.DataFrame(
    [['Qfinancial_record',
      en('financial record'),
      en('type of record (document or otherwise) containing financial information'),
      en('financial record'),
      math.nan,
      'record'],
     ['Qfinancial_transaction',
      en('financial transaction'),
      en('agreement, or communication, carried out between a buyer and a seller to exchange an asset for payment'),
      en('transaction'),
      'Qfinancial_record',
      'txn'],
     ['Qmarket',
      en('market'),
      en('mechanisms whereby supply and demand confront each other and deals are made, involving places, processes and institutions in which exchanges occur'),
      en('market'),
      math.nan,
      'market'],
     ['Qperson_organization',
      en('person or organization'),
      en('class of agents'),
      en('agents'),
      math.nan,
      'org'],
     ['Qasset',
      en('asset'),
      en('economic resource, from which future economic benefits are expected'),
      en('assets'),
      math.nan,
      'asset'],
     ['Qbundle',
      en('product bundling'),
      en('several products combined for sale as one product'),
      en('package deal'),
      'Qfinancial_record',
      'bundle'],
     ['Qsell_order',
      en('sell order'),
      en('stated intention to engage in sales of assets'),
      en('sales order'),
      'Qfinancial_record',
      'sorder'],
     ['Qbuy_order',
      en('buy order'),
      en('stated intention to engage in purchase of assets'),
      en('purchase order'),
      'Qfinancial_record',
      'border']],
    columns=CLASS_NODE_COLUMNS + ['abbrev'])

_PROPERTY_NODES = pd.DataFrame(
    [['Pgraph', en('a KGTK Graph'), en('KGTK graph of this edge'), 'string', 'graph'],
     ['Pquantity', en('quantity of transaction'), en('quantity or volume of a transaction'), 'quantity', 'quantity'],
     ['Pprice', en('price of transaction'), en('per unit price of a transaction'), 'quantity', 'price'],
     ['Pbundle', en('bundle'), en('type of bundle is transaction part of'), 'wikibase-item', 'bundle'],
     ['Passet', en('asset'), en('asset or good traded in a transaction'), 'wikibase-item', 'asset'],
     ['Pmarket', en('market'), en('the market this transaction is traded'), 'wikibase-item', 'market'],
     ['Pbuyer', en('buyer'), en('buyer in a transaction'), 'wikibase-item', 'buyer'],
     ['Pseller', en('seller'), en('seller in a transaction'), 'wikibase-item', 'seller'],
     ['Ppart_of_buy_order', en('part of buy order'), en('this transaction is part of the buy order'), 'wikibase-item', 'border'],
     ['Ppart_of_sell_order', en('part of sell order'), en('this transaction is part of the sell order'), 'wikibase-item', 'sorder'],
     ['Pcontains', en('contains'), en('item or substance located within this item but not part of it'), 'wikibase-item', 'contains'],
     ['Pcontains_edge', en('contains edge'), en('contains edge id'), 'external-id', 'edge'],
     ['Pdiff_graph_1', en('diff graph 1'), en('first argument of diff operator'), 'string', 'graph1'],
     ['Pdiff_graph_2', en('diff graph 2'), en('second argument of diff operator'), 'string', 'graph2'],
     ['Pisa', en('instance of'),
      en('that class of which this subject is a particular example and member'),
      'wikibase-item', 'isa'],
     ['Ptime', en('point in time'),
      en('time and date something took place, existed or a statement was true'),
      'time', 'time'],
     ['Psubclassof', en('subclass of'), en('next higher class or type; all instances of these items are instances of those items; this item is a class (subset) of that item. '),
       'wikibase-item', 'subof']
    ],
    columns=PROPERTY_COLUMNS + ['abbrev'])
